# Media presets are just named css media queries, used in several places:
# - To specify alternate source images (for art direction)
# - To build the 'sizes' attribute
# - When given alternate source images, specify which sizes to generate.
media_presets:
  wide_desktop: 'min-width: 1801px'
  desktop: 'max-width: 1800px'
  wide_tablet: 'max-width: 1200px'
  tablet: 'max-width: 900px'
  mobile: 'max-width: 600px'

# Markup presets allow you to group settings together, and select one of them by
# name in your jekyll tag. All settings are optional.
markup_presets:

  default:
    # What form the output markup should take:
    markup: data_auto

    # Must be an array, and order matters. Defaults to just 'original', which
    # does what you'd expect.
    formats: [webp, original]

    # Must be an array: which image sizes (width in pixels) to generate (unless
    # directed otherwise below). If not specified, will use sensible default
    # values.
    widths: [200, 400, 600, 800, 1600]

    # Alternate source images (for art direction) are associated with media
    # query presets. Here, you can optionally specify a different set of sizes
    # to generate for those alternate source images.  This is how you avoid
    # generating a 1600 pixel wide image that's only shown on narrow screens.
    # Must be arrays.
    media_widths:
      mobile: [200, 400, 600]
      tablet: [400, 600, 800]

    # For building the 'sizes' attribute on img and source tags. specifies how
    # wide the image will be when a given media query is true. Note that every
    # source in a given <picture> tag will have the same associated sizes
    # attribute.
    sizes:
      mobile: 100vw
      tablet: 80vw

    # Specifies an optional, unconditional size attribute. Can be given alone,
    # or if specified in combination with 'sizes' below, will be given last
    # (when no media queries apply).
    size: 800px

    # Specify the properties of the fallback image. If not specified, will
    # return a 900 pixel wide image in the original format.
    fallback_width: 800
    fallback_format: original

    # always lazy
    noscript: true # add a fallback image inside a <noscript> tag
    attributes:
      img: class="lazy"